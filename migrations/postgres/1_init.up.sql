CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TYPE user_role AS ENUM ('admin', 'user');
CREATE TYPE user_gender AS ENUM ('male', 'female');
CREATE TYPE test_date_pub_status AS ENUM ('shown', 'hidden');
CREATE TYPE screenshot_type AS ENUM ('lyceum', 'olympiad', 'MCKO', 'quota');

CREATE TABLE IF NOT EXISTS public.statuses
(
    id                       bigint GENERATED BY DEFAULT AS IDENTITY
        PRIMARY KEY,
    name                     text    NOT NULL,
    available_for_10th_class boolean NOT NULL default false,
    available_for_9th_class  boolean NOT NULL default false
);

INSERT INTO public.statuses (id, name, available_for_10th_class, available_for_9th_class)
VALUES (1, 'Зарегистрирован', true, true),
       (2, 'Записан на тестирование', true, true),
       (3, 'Прикрепил скриншот', true, true),
       (4, 'Рекомендован к зачислению по первому профилю (общий набор)', true, true),
       (5, 'Рекомендован к зачислению по первому профилю (вступительные лицея НИУ ВШЭ)', true, true),
       (6, 'Рекомендован к зачислению по первому профилю (олимпиада/конкурс)', true, false),
       (7, 'Рекомендован к зачислению по первому профилю (МЦКО)', false, true),
       (8, 'Рекомендован к зачислению по второму профилю (общий набор)', true, true),
       (9, 'Рекомендован к зачислению по второму профилю (вступительные лицея НИУ ВШЭ)', true, true),
       (10, 'Рекомендован к зачислению по второму профилю (олимпиада/конкурс)', true, false),
       (11, 'Рекомендован к зачислению по второму профилю (МЦКО)', false, true),
       (12, 'Рекомендован к зачислению по обоим профилям (общий набор)', true, true),
       (13, 'Рекомендован к зачислению по обоим профилям (вступительные лицея НИУ ВШЭ)', true, true),
       (14, 'Рекомендован к зачислению по обоим профилям (олимпиада/конкурс)', true, false),
       (15, 'Рекомендован к зачислению по обоим профилям (МЦКО)', false, true),
       (16, 'Зачислен по первому профилю (общий набор)', true, true),
       (17, 'Зачислен по первому профилю (вступительные лицея НИУ ВШЭ)', true, true),
       (18, 'Зачислен по первому профилю (олимпиада/конкурс)', true, false),
       (19, 'Зачислен по первому профилю (МЦКО)', false, true),
       (20, 'Зачислен по второму профилю (общий набор)', true, true),
       (21, 'Зачислен по второму профилю (вступительные лицея НИУ ВШЭ)', true, true),
       (22, 'Зачислен по второму профилю (олимпиада/конкурс)', true, false),
       (23, 'Зачислен по второму профилю (МЦКО)', false, true);

CREATE TABLE IF NOT EXISTS public.users
(
    id                             bigint GENERATED BY DEFAULT AS IDENTITY
        PRIMARY KEY,
    email                          text UNIQUE NOT NULL,
    hash_password                  text        NOT NULL,
    fio                            text        NOT NULL,
    date_of_birth                  date        NOT NULL,
    gender                         user_gender NOT NULL,
    phone_number                   text        NOT NULL,
    parent_phone_number            text        NOT NULL,
    current_school                 text,
    education_year                 smallint    NOT NULL,
    is_activated                   boolean     NOT NULL DEFAULT FALSE,
    activation_token               uuid        NOT NULL,
    change_password_token          uuid        NOT NULL,
    last_change_password_mail_sent timestamp with time zone,
    last_activation_mail_sent      timestamp with time zone,
    role                           user_role   NOT NULL DEFAULT 'user'
);

INSERT INTO public.users
(email, hash_password, fio, date_of_birth, gender, phone_number, parent_phone_number, current_school, education_year,
 is_activated, activation_token, change_password_token, role)
VALUES ('admin@admin.admin', '$2a$10$R/BGDayqUh9FZODPYwYKburFqRaIyomR/XWD33eVX9KmHPGAYeH3.', 'admin', now(), 'male',
        'none', 'none', 'none', 10, true, uuid_generate_v4(), uuid_generate_v4(), 'admin');

CREATE TABLE IF NOT EXISTS public.user_statuses
(
    user_id        bigint   NOT NULL REFERENCES public.users (id),
    status_id      bigint   NOT NULL REFERENCES public.statuses (id),
    education_year smallint NOT NULL,
    PRIMARY KEY (user_id, education_year)
);

INSERT INTO public.user_statuses
    (user_id, status_id, education_year)
VALUES (1, 1, 9),
       (1, 1, 10);

CREATE TABLE IF NOT EXISTS public.user_screenshots
(
    user_id        bigint          NOT NULL REFERENCES users (id),
    education_year smallint        NOT NULL,
    original_name  text            NOT NULL,
    file_name      text            NOT NULL,
    type           screenshot_type NOT NULL,
    PRIMARY KEY (user_id, education_year)
);

CREATE TABLE IF NOT EXISTS public.test_dates
(
    id                bigint GENERATED BY DEFAULT AS IDENTITY
        PRIMARY KEY,
    date_time         timestamp with time zone NOT NULL,
    location          text                     NOT NULL,
    max_persons       integer                  NOT NULL,
    education_year    smallint                 NOT NULL,
    pub_status        test_date_pub_status     NOT NULL DEFAULT 'shown',
    notification_sent boolean                  NOT NULL DEFAULT false
);

CREATE TABLE IF NOT EXISTS public.common_locations
(
    id   bigint GENERATED BY DEFAULT AS IDENTITY
        PRIMARY KEY,
    name text NOT NULL
);

INSERT INTO public.common_locations
    (id, name)
VALUES (1, 'Большой Трехсвятительский пер. д. 4'),
       (2, 'Большой Казенный пер. д. 9');

CREATE TABLE IF NOT EXISTS public.user_test_dates
(
    user_id        bigint REFERENCES public.users (id)      NOT NULL,
    test_date_id   bigint REFERENCES public.test_dates (id) NOT NULL,
    education_year smallint                                 NOT NULL,
    is_attended    boolean                                  NOT NULL DEFAULT false,
    PRIMARY KEY (user_id, education_year)
);

CREATE TABLE IF NOT EXISTS public.profiles
(
    id             bigint GENERATED BY DEFAULT AS IDENTITY
        PRIMARY KEY,
    name           text     NOT NULL,
    education_year smallint NOT NULL
);

INSERT INTO public.profiles
    (id, name, education_year)
VALUES (1, 'Психология', 10),
       (2, 'Юриспруденция', 10),
       (3, 'Естественные науки', 10),
       (4, 'Гуманитарные науки', 10),
       (5, 'Экономика и математика', 10),
       (6, 'Дизайн', 10),
       (7, 'Востоковедение', 10),
       (8, 'Информатика, инеженерия и математика', 10),
       (9, 'Экономика и социальные науки', 10),
       (10, 'Гуманитарный (два языка)', 9),
       (11, 'Гуманитарный (история)', 9),
       (12, 'Математический', 9);

CREATE TABLE IF NOT EXISTS public.subjects
(
    id   bigint GENERATED BY DEFAULT AS IDENTITY
        PRIMARY KEY,
    name text NOT NULL
);

INSERT INTO public.subjects
    (id, name)
VALUES (1, 'Биология'),
       (2, 'История'),
       (3, 'Обществознание'),
       (4, 'Химия'),
       (5, 'Литература'),
       (6, 'Профильная математика'),
       (7, 'Социокультурная осведомленность'),
       (8, 'Физика'),
       (9, 'Информатика'),
       (10, 'Математика МЦКО'),
       (11, 'Русский язык МЦКО'),
       (12, 'Английский язык МЦКО');

CREATE TABLE IF NOT EXISTS public.profile_subjects
(
    profile_id bigint REFERENCES public.profiles (id) NOT NULL,
    subject_id bigint REFERENCES public.subjects (id) NOT NULL,
    PRIMARY KEY (profile_id, subject_id)
);

INSERT INTO public.profile_subjects
    (profile_id, subject_id)
VALUES (1, 1),
       (2, 2),
       (2, 3),
       (3, 1),
       (3, 4),
       (4, 2),
       (4, 3),
       (4, 5),
       (5, 6),
       (6, 7),
       (7, 2),
       (8, 6),
       (8, 8),
       (8, 9),
       (9, 2),
       (9, 3),
       (10, 11),
       (10, 12),
       (11, 11),
       (11, 12),
       (12, 10),
       (12, 12);

CREATE TABLE IF NOT EXISTS public.user_profiles
(
    user_id             bigint REFERENCES public.users (id) NOT NULL,
    user_education_year smallint                            NOT NULL,
    first_profile_id    bigint REFERENCES public.profiles (id),
    second_profile_id   bigint REFERENCES public.profiles (id),
    PRIMARY KEY (user_id, user_education_year)
);

CREATE TABLE IF NOT EXISTS public.user_profile_subjects
(
    user_id                   bigint REFERENCES public.users (id) NOT NULL,
    user_education_year       smallint                            NOT NULL,
    first_profile_subject_id  bigint REFERENCES public.subjects (id),
    second_profile_subject_id bigint REFERENCES public.subjects (id),
    PRIMARY KEY (user_id, user_education_year)
);

CREATE TABLE IF NOT EXISTS public.foreign_languages
(
    id   bigint GENERATED BY DEFAULT AS IDENTITY
        PRIMARY KEY,
    name text NOT NULL
);

INSERT INTO public.foreign_languages
    (id, name)
VALUES (1, 'Английский язык'),
       (2, 'Немецкий язык'),
       (3, 'Французский язык');

CREATE TABLE IF NOT EXISTS public.user_foreign_languages
(
    user_id             bigint REFERENCES public.users (id) NOT NULL,
    user_education_year smallint                            NOT NULL,
    foreign_language_id bigint REFERENCES public.foreign_languages (id),
    PRIMARY KEY (user_id, user_education_year)
);